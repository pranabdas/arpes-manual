"use strict";(self.webpackChunkarpes_manual=self.webpackChunkarpes_manual||[]).push([[275],{3905:function(e,t,r){r.d(t,{Zo:function(){return c},kt:function(){return y}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),p=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},u="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(r),d=a,y=u["".concat(s,".").concat(d)]||u[d]||f[d]||o;return r?n.createElement(y,i(i({ref:t},c),{},{components:r})):n.createElement(y,i({ref:t},c))}));function y(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:a,i[1]=l;for(var p=2;p<o;p++)i[p]=r[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},1778:function(e,t,r){r.r(t),r.d(t,{assets:function(){return c},contentTitle:function(){return s},default:function(){return y},frontMatter:function(){return l},metadata:function(){return p},toc:function(){return u}});var n=r(7462),a=r(3366),o=(r(7294),r(3905)),i=["components"],l={title:"Data analysis"},s=void 0,p={unversionedId:"data-analysis",id:"data-analysis",title:"Data analysis",description:"All ARPES and XPS data are recorded by Scienta-Omicron SES software. We store",source:"@site/docs/data-analysis.md",sourceDirName:".",slug:"/data-analysis",permalink:"/arpes-manual/data-analysis",draft:!1,editUrl:"https://github.com/pranabdas/arpes-manual/blob/main/docs/data-analysis.md",tags:[],version:"current",frontMatter:{title:"Data analysis"},sidebar:"docs",previous:{title:"Analyzer Operation",permalink:"/arpes-manual/analyzer"},next:{title:"ARPES resolution",permalink:"/arpes-manual/resolution"}},c={},u=[],f={toc:u},d="wrapper";function y(e){var t=e.components,r=(0,a.Z)(e,i);return(0,o.kt)(d,(0,n.Z)({},f,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"All ARPES and XPS data are recorded by Scienta-Omicron SES software. We store\nbandstructure data in both Igor and plain text formats, while the Fermi mapping\ndata is stored in a zipped binary format. The data can be easily opened by Igor\nprogram, or our ",(0,o.kt)("a",{parentName:"p",href:"https://pranabdas.github.io/arpespythontools"},"arpespythontools")," package can be used analyze the\ndata. A MATLAB loader is also available from us. One can implement data loaders\nfor other plotting programs."),(0,o.kt)("p",null,"Also, if you only need to obtain integrated intensity from the SES spectra for\nXPS data analysis, you may try our ",(0,o.kt)("a",{parentName:"p",href:"https://pranabdas.github.io/xps/"},"web application"),"."))}y.isMDXComponent=!0}}]);